#!/bin/bash -ex

. vm-functions

if grep -q 'Red Hat Enterprise Linux Server release 6' /etc/redhat-release; then
  register_channels rhel-6-server-rpms
elif grep -q 'Red Hat Enterprise Linux Server release 7' /etc/redhat-release; then
  register_channels rhel-7-server-rpms
else
  register_channels
fi

yum_install nfs-utils nfs-utils-lib
chkconfig rpcbind on

if grep -q 'release 7' /etc/redhat-release; then
  chmod +x /etc/rc.d/rc.local
  cat >>/etc/rc.d/rc.local <<EOF
service rpcbind start
EOF
fi

useradd vagrant
echo vagrant | passwd --stdin vagrant
echo 'vagrant ALL=(ALL) NOPASSWD: ALL' >>/etc/sudoers
mkdir -p /var/lib/AccountsService/users
cp vagrant /var/lib/AccountsService/users

sed -i -e '/Defaults.*requiretty/ d;' /etc/sudoers

su vagrant -c "mkdir -m 0700 /home/vagrant/.ssh; https_proxy=$PROXY curl -sLo /home/vagrant/.ssh/authorized_keys https://github.com/mitchellh/vagrant/raw/master/keys/vagrant.pub; chmod 0600 /home/vagrant/.ssh/authorized_keys"
chcon system_u:object_r:ssh_home_t:s0 /home/vagrant/.ssh /home/vagrant/.ssh/authorized_keys

mkinitrd --with=virtio_blk --force /boot/initramfs-$(uname -r).img $(uname -r)

# vagrant-libvirt needs port 7 to be unfirewalled in order to "ping" the VM to
# determine its IP address.  See
# https://github.com/pradels/vagrant-libvirt/issues/544

if grep -q 'release 7' /etc/redhat-release; then
  if [ -e /etc/sysconfig/iptables ] && grep -q OS_FIREWALL_ALLOW /etc/sysconfig/iptables; then
    sed -i -e '/^:OS_FIREWALL_ALLOW / a\
-A OS_FIREWALL_ALLOW -p tcp -m state --state NEW -m tcp --dport 7 -j ACCEPT' /etc/sysconfig/iptables
  elif [ -e /etc/sysconfig/iptables ] && grep -q nova-filter-top /etc/sysconfig/iptables; then
    sed -i -e '/^:nova-filter-top / a\
-A INPUT -p tcp -m state --state NEW -m tcp --dport 7 -j ACCEPT' /etc/sysconfig/iptables
  else
    firewall-cmd --add-port 7/tcp
  fi
elif grep -q 'release 6' /etc/redhat-release; then
  lokkit -p 7:tcp
fi
