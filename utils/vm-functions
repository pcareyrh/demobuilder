#!/bin/bash -e

interface_ip() {
  ip addr show dev $1 | sed -n '/inet / { s!.*inet !!; s!/.*!!; p; }'
}

register_channels() {
  if [ -n "$RHN_USER" -a -x /usr/sbin/subscription-manager -a ! -e /etc/pki/consumer/cert.pem ]; then
    [ -e /etc/os-release ] && cp /etc/os-release /etc/os-release-

    unsetx
    subscription-manager register --username "$RHN_USER" --password "$RHN_PASS"
    setx

    if [ -n "$RHN_POOLS" ]; then
      for pool in $RHN_POOLS; do
        subscription-manager attach --pool=$pool
      done
    else
      subscription-manager attach --auto
    fi
    subscription-manager repos --disable=*

  else
    if [ -x /usr/bin/dnf ]; then
      grep -q ^proxy= /etc/dnf/dnf.conf || echo proxy=$PROXY >>/etc/dnf/dnf.conf
    else
      grep -q ^proxy= /etc/yum.conf || echo proxy=$PROXY >>/etc/yum.conf
    fi
  fi

  if [ -e /etc/fedora-release ]; then
    for i in /etc/yum.repos.d/*.repo; do
      sed -i -e "s!^#baseurl=http://download.fedoraproject.org/!baseurl=$MIRROR_FEDORA/!; s/^metalink=/#metalink=/" $i
    done
  fi

  for CHANNEL in "$@"; do
    if [ -n "$RHN_USER" -a -x /usr/sbin/subscription-manager ]; then
      subscription-manager repos --enable=$CHANNEL
    else
      curl -so /etc/yum.repos.d/auto-$CHANNEL.repo $MIRROR_RHN/$CHANNEL.repo
    fi
  done
}

yum_update() {
  if [ -x /usr/bin/dnf ]; then
    PYTHONUNBUFFERED=1 /usr/bin/dnf -y update
  else
    PYTHONUNBUFFERED=1 /usr/bin/yum -y update
  fi
}

yum_remove() {
  if [ -x /usr/bin/dnf ]; then
    PYTHONUNBUFFERED=1 /usr/bin/dnf -y remove "$@"
  else
    PYTHONUNBUFFERED=1 /usr/bin/yum -y remove "$@"
  fi
}

yum_install() {
  if [ -x /usr/bin/dnf ]; then
    PYTHONUNBUFFERED=1 /usr/bin/dnf -y install "$@"
  else
    PYTHONUNBUFFERED=1 /usr/bin/yum -y install "$@"
  fi
}

docker_pull() {
  if ! grep -q HTTP_PROXY /etc/sysconfig/docker; then
    cat >>/etc/sysconfig/docker <<EOF
HTTP_PROXY=$PROXY
HTTPS_PROXY=$PROXY
EOF
    service docker restart
  fi

  docker pull $1
}

cleanup() {
  [ -x /usr/local/bin/demobuilder-cleanup.sh ] && /usr/local/bin/demobuilder-cleanup.sh

  http_proxy= curl -s "http://$APILISTENER/gitstamp?msg=$LAYER" >>/etc/demobuilder

  # running kernel, so must use rpm -e
  [ -n "$(rpm -q kernel --last | tail -n +2 | cut -d' ' -f1)" ] && rpm -e $(rpm -q kernel --last | tail -n +2 | cut -d' ' -f1)

  if [ -x /usr/bin/dnf ]; then
    PYTHONUNBUFFERED=1 /usr/bin/dnf clean all || true
  else
    PYTHONUNBUFFERED=1 /usr/bin/yum clean all || true
  fi
  rm -rf /var/cache/yum/*
  rm -f /etc/yum.repos.d/auto-*.repo
  if [ -x /usr/bin/dnf ]; then
    sed -i -e '/^proxy=/ d;' /etc/dnf/dnf.conf
  else
    sed -i -e '/^proxy=/ d;' /etc/yum.conf
  fi

  if [ -n "$RHN_USER" -a -x /usr/sbin/subscription-manager -a -e /etc/pki/consumer/cert.pem ]; then
    subscription-manager unregister || true
    rm /var/lib/rhsm/branded_name
    [ -e /etc/os-release- ] && mv /etc/os-release- /etc/os-release
  fi

  if [ -e /etc/fedora-release ]; then
    for i in /etc/yum.repos.d/*.repo; do
      sed -i -e "s!^baseurl=$MIRROR_FEDORA/!#baseurl=http://download.fedoraproject.org/!; s/^#metalink=/metalink=/" $i
    done
  fi

  rm -f /etc/ssh/ssh_host_*
  rm -f /var/lib/dhclient/*.lease /var/lib/NetworkManager/dhclient-*.lease

  if [ -e /etc/pki/ca-trust/source/anchors/demobuilder-insecure-CA.crt ]; then
    rm -f /etc/pki/ca-trust/source/anchors/demobuilder-insecure-CA.crt
    update-ca-trust
  fi

  if [ -e /usr/share/doc/demobuilder/index.html ]; then
    mkdir -p /home/demo/Desktop
    cat >/home/demo/Desktop/demobuilder.desktop <<EOF
[Desktop Entry]
Version=1.0
Name=About this demo
Exec=firefox file:///usr/share/doc/demobuilder/index.html
Icon=/usr/share/icons/gnome/256x256/apps/help-browser.png
Terminal=false
Type=Application
StartupNotify=true
EOF
    chown -R demo:demo /home/demo/Desktop
  fi

  if [ -e /etc/sysconfig/docker ]; then
    sed -ri -e '/^HTTPS?_PROXY/ d; /^NO_PROXY/ d;' /etc/sysconfig/docker
  fi

  fstrim /
}

create_ca() {
  echo 01 >/etc/pki/CA/serial
  >/etc/pki/CA/index.txt

  openssl genrsa -out /etc/pki/CA/private/ca.key
  chmod 0400 /etc/pki/CA/private/ca.key
  openssl req -new -x509 -days 3650 -key /etc/pki/CA/private/ca.key -extensions v3_ca -out /etc/pki/CA/certs/ca.crt -subj "/C=GB/ST=Hampshire/O=Red Hat UK Ltd/CN=CA certificate"

  cp /etc/pki/CA/certs/ca.crt /etc/pki/ca-trust/source/anchors
  update-ca-trust enable
  update-ca-trust
}

sign_cert() {
  TEMPFILE=$(mktemp)
  openssl req -new -key $1 -out $TEMPFILE -subj "/C=GB/ST=Hampshire/O=Red Hat UK Ltd/CN=$2"
  openssl ca -batch -keyfile /etc/pki/CA/private/ca.key -cert /etc/pki/CA/certs/ca.crt -extensions usr_cert -notext -md sha1 -in $TEMPFILE -out $3
  rm $TEMPFILE
}

firefox_set_homepage() {
  cat >/usr/lib64/firefox/browser/defaults/preferences/local-settings.js <<EOF
pref("general.config.filename", "firefox.cfg");
pref("general.config.obscure_value", 0);
EOF

  cat >/usr/lib64/firefox/firefox.cfg <<EOF
//
pref("browser.startup.homepage", "$1");
pref("startup.homepage_override_url", "");
pref("startup.homepage_welcome_url", "");
pref("signon.rememberSignons", false);
EOF
}

unsetx() {
  if [[ $- =~ x ]]; then
    XTRACE=on
  fi

  set +x
}

setx() {
  if [ -n "$XTRACE" ]; then
    set -x
  fi
}

unsetx
eval $(curl -s $APILISTENER/config)
setx

setenforce 0
swapoff -a
echo 300 >/sys/block/sda/device/timeout || true

export PROXY=$(curl -s http://$APILISTENER/cache)

if [ ! -e /etc/pki/ca-trust/source/anchors/demobuilder-insecure-CA.crt ]; then
  http_proxy=$PROXY curl -so /etc/pki/ca-trust/source/anchors/demobuilder-insecure-CA.crt http://cacert/
  update-ca-trust enable
  update-ca-trust
fi
