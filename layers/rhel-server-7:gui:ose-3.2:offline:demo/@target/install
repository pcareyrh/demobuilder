#!/bin/bash -ex

. vm-functions

register_channels rhel-7-server-rpms rhel-7-server-optional-rpms

yum_install java-1.8.0-openjdk-devel

IMAGES=(
  docker.io/openshift/hello-openshift:v0.4.2
)

sed -i -e 's!^OPTIONS='\''!OPTIONS='\''-H unix:///var/run/docker.sock -H tcp://127.0.0.1:2375 !' /etc/sysconfig/docker
DRIP=$(oc get svc docker-registry -o template --template='{{.spec.portalIP}}')
IRIP=$(oc get svc image-registry -o template --template='{{.spec.portalIP}}')

cat >>/etc/sysconfig/docker <<EOF
NO_PROXY=$IRIP,$DRIP
EOF

for image in "${IMAGES[@]}"; do
  docker_pull $image
done

http_proxy=http://$HOSTNAME:8080/ curl -sO http://www.mirrorservice.org/sites/ftp.apache.org/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz
tar -xzf apache-maven-3.3.9-bin.tar.gz
mv apache-maven-3.3.9 /usr/local
ln -sf /usr/local/apache-maven-3.3.9/bin/mvn /usr/local/bin

oadm new-project prod --admin=demo
oc policy add-role-to-group system:image-puller system:serviceaccounts:prod -n demo

# allow Jenkins to play around in the demo and prod projects
oc policy add-role-to-user edit system:serviceaccount:demo:default -n demo
oc policy add-role-to-user edit system:serviceaccount:demo:default -n prod

oadm new-project xpaas --admin=demo

mkdir -p /home/demo/.m2
cp settings.xml /home/demo/.m2
sed -i -e "/<proxies>/ a \
<proxy><host>$HOSTNAME</host></proxy>" /home/demo/.m2/settings.xml

http_proxy=http://$HOSTNAME:8080/ curl -so /etc/pki/ca-trust/source/anchors/ca-webproxycache.crt http://cacert/
update-ca-trust

# http://download.eng.brq.redhat.com/released/jbdevstudio/9.0.0/jboss-devstudio-9.0.0.GA-installer-standalone.jar
curl -sO http://$APILISTENER/static/isos/jboss-devstudio-9.0.0.GA-installer-standalone.jar
java -jar jboss-devstudio-9.0.0.GA-installer-standalone.jar InstallConfigRecord.xml
cp 'Red Hat JBoss Developer Studio 9.0.0.GA.desktop' /usr/share/applications
install -m 0755 -o demo 'Red Hat JBoss Developer Studio 9.0.0.GA.desktop' /home/demo/Desktop

# http://download.eng.brq.redhat.com/released/jbdevstudio/9.0.0/jboss-devstudio-9.0.0.GA-updatesite-core.zip
curl -sO http://$APILISTENER/static/isos/jboss-devstudio-9.0.0.GA-updatesite-core.zip
/usr/local/jbdevstudio/jbdevstudio -application org.eclipse.equinox.p2.director -repository 'jar:file:///root/demobuilder/jboss-devstudio-9.0.0.GA-updatesite-core.zip!/' -installIU org.jboss.tools.openshift.feature.feature.group -destination /usr/local/jbdevstudio/studio -noSplash

https_proxy=$PROXY curl -sLO https://github.com/jim-minter/eclipse-importer/raw/master/com.redhat.importer_1.0.0.201511271311.jar
mv com.redhat.importer_1.0.0.201511271311.jar /usr/local/jbdevstudio/studio/plugins/

yum_install xorg-x11-server-Xvfb

COMMIT=21ffa5160a84fb894942ed1f58778ea6b00a2b9d
https_proxy=$PROXY curl -sLO https://github.com/jim-minter/ose3-demos/archive/$COMMIT.zip
unzip -q $COMMIT.zip
mv ose3-demos-$COMMIT/* /home/demo
chown -R demo:demo /home/demo

for i in /home/demo/git/*; do
  git init --bare /var/lib/git/demo/$(basename $i)
  chown -R nobody:nobody /var/lib/git

  pushd $i
  git init
  git add -A
  git commit -m 'Initial commit'
  git remote add origin git://localhost/demo/$(basename $i)
  git push -u origin master

  chown -R demo:demo $i

  if [ -e pom.xml ]; then
    BUILD="$BUILD $(basename $i) $i"
    su - demo -c "cd $i && mvn clean package"
    rm -rf target
  fi

  popd

  cat >/var/lib/git/demo/$(basename $i)/hooks/post-receive <<EOF
#!/bin/bash

echo 'Triggering OSE3 build...'
curl -sX POST "https://\$(cat /proc/sys/kernel/hostname):8443/oapi/v1/namespaces/demo/buildconfigs/$(basename $i)/webhooks/secret/generic"
EOF
  chmod 0755 /var/lib/git/demo/$(basename $i)/hooks/post-receive
  chown -R nobody:nobody /var/lib/git
done

echo 'export DOCKER_HOST=tcp://localhost:2375' >>/home/demo/.bash_profile
su - demo -c "mkdir /home/demo/git/fis-examples"
for example in cdi-camel-http cdi-cxf cdi-camel cdi-camel-jetty java-simple-mainclass java-camel-spring karaf-cxf-rest karaf-camel-rest-sql karaf-camel-log; do
  git init --bare /var/lib/git/demo/fis-examples/$example
  chown -R nobody:nobody /var/lib/git

  su - demo -c "cd /home/demo/git/fis-examples && mvn archetype:generate -B -DarchetypeCatalog=https://repo.fusesource.com/nexus/content/groups/public/archetype-catalog.xml -DarchetypeGroupId=io.fabric8.archetypes -DarchetypeArtifactId=$example-archetype -DarchetypeVersion=2.2.0.redhat-079 -DgroupId=com.redhat -DartifactId=$example -Dversion=1.0-SNAPSHOT"
  sed -i -e "s!<docker.from>!<docker.from>$IRIP:5000/!" /home/demo/git/fis-examples/$example/pom.xml
  ./install.py /home/demo/git/fis-examples/$example/quickstart-template.json GIT_REPO git://openshift.example.com/demo/fis-examples/$example
  if [ $example = cdi-camel-jetty ]; then
    # https://issues.jboss.org/browse/OSFUSE-190
    ./install.py /home/demo/git/fis-examples/$example/quickstart-template.json SERVICE_NAME qs-cdi-camel-jetty
  elif [ $example = karaf-camel-rest-sql ]; then
    # https://issues.jboss.org/browse/OSFUSE-193
    ./install.py /home/demo/git/fis-examples/$example/quickstart-template.json SERVICE_NAME karaf-camel-rest-sql
  fi
  oc create -f /home/demo/git/fis-examples/$example/quickstart-template.json -n xpaas

  pushd /home/demo/git/fis-examples/$example
  git init
  git add -A
  git commit -m 'Initial commit'
  git remote add origin git://localhost/demo/fis-examples/$example
  git push -u origin master

  chown -R demo:demo /home/demo/git/fis-examples/$example

  if [ -e pom.xml ]; then
    su - demo -c "cd /home/demo/git/fis-examples/$example && mvn clean install docker:build fabric8:json"
    su - demo -c "cd /home/demo/git/fis-examples/$example && mvn fabric8:apply || true"
    su - demo -c "cd /home/demo/git/fis-examples/$example && git clean -fdx"
  fi

  popd

  oc process s2i-quickstart-$example -n xpaas | oc create -n xpaas -f -
  for ((i=0; i<360; i++)); do
    if oc get build s2i-quickstart-$example-1 -n xpaas | grep -q Complete; then
      oc build-logs s2i-quickstart-$example-1 -n xpaas
      break
    elif oc get build s2i-quickstart-$example-1 -n xpaas | egrep -qe 'Error|Failed'; then
      oc build-logs s2i-quickstart-$example-1 -n xpaas
      echo "BIG WARNING"
      oc get build s2i-quickstart-$example-1 -n xpaas
      #false # TODO
    elif [ $i -lt 359 ]; then
      sleep 5
    else
      false
    fi
  done
  oc delete all --all -n xpaas
done

docker images | grep ^fabric8/ | awk '{print $3;}' | xargs docker rmi
# build-1 image?

oc create -f /home/demo/git/monster/openshift/ticket-monster-template.yaml -n openshift
oc create -f /home/demo/git/monster/openshift/ticket-monster-prod-template.yaml -n openshift

oc process monster -n openshift | oc create -n demo -f -
for ((i=0; i<360; i++)); do
  if oc get build monster-1 -n demo | grep -q Complete; then
    oc build-logs monster-1 -n demo
    break
  elif oc get build monster-1 -n demo | egrep -qe 'Error|Failed'; then
    oc build-logs monster-1 -n demo
    echo "BIG WARNING"
    oc get build monster-1 -n demo
    #false # TODO
  elif [ $i -lt 359 ]; then
    sleep 5
  else
    false
  fi
done
oc delete all --all -n demo

su - demo -c "xvfb-run /usr/local/jbdevstudio/jbdevstudio -data workspace $BUILD"

yum -y history undo $(yum history list | grep -A1 ^- | tail -1 | awk '{print $1;}')
rm /usr/local/jbdevstudio/studio/plugins/com.redhat.importer_1.0.0.201511271311.jar

chown -R demo:demo /home/demo

for i in $(echo 'SELECT url FROM cache WHERE url LIKE "%.sha1";' | sqlite3 /var/cache/webproxycache/webproxycache.db); do
  http_proxy=http://$HOSTNAME:8080/ https_proxy=http://$HOSTNAME:8080/ curl -so /dev/null $(echo $i | sed -e 's/.sha1$//').md5
done
